* Source blocks 

Save the result and pass S_file to ans.
#+name: save S_file
#+BEGIN_SRC octave
saveas(1, S_file);
ans = S_file;
#+END_SRC

#+RESULTS: save S_file

A copyright notice. Empty first line intentionally included.
#+name: copyright
#+BEGIN_SRC octave

% Copyright (c) 2018-2021 Johann-Markus Batke (johann-markus.batke@hs-emden-leer.de)
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.
#+END_SRC


* Octave Documentation


#+name: octave comment
#+BEGIN_SRC emacs-lisp :var s="Zeile 1\nZeile 2" :results raw
(replace-regexp-in-string "^" "% " s)
#+END_SRC

#+RESULTS: octave comment
% Zeile 1
% Zeile 2
% Zeile 1
% Zeile 2

Usage in octave header:
: :post octave comment(s=*this*)

Example
 #+name: interface doc
 #+BEGIN_SRC org :results ascii [:results output] :post octave comment(s=*this*)
 - INPUTS ::
   - in 1
   - in 2
 - OUTPUTS ::
   out
 #+END_SRC

#+call: interface doc()

* Documentation template
documentation in a m-file should contain (e.g. this could go to a snippet)
** function
file:namedfunc.m: calculates something for given argument
*** Octave definition                                              :internal:
#+BEGIN_SRC octave :tangle namedfunc.m
<<named doc[:results ascii :post octave comment(s=*this*)]()>>
<<copyright>>
#+END_SRC
*** Interface test                                                 :internal:
*** Documenation                                                     :ignore:
#+name: named doc
#+BEGIN_SRC org
,*** Syntax
,*** Description
,*** Input Arguments
,*** Return Values
#+END_SRC

#+call: named doc[:output html]()

*** Examples
*** Tips
*** Alternatives
*** See Also

